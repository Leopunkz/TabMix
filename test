import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QTabWidget, QVBoxLayout, QWidget, QSlider, QLabel, QHBoxLayout
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtCore import Qt

# Crea la finestra principale
class BrowserWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Custom Browser with Audio Mixer")
        self.setGeometry(100, 100, 1200, 800)

        # Layout principale
        self.main_layout = QVBoxLayout()

        # Crea il TabWidget per gestire le schede del browser
        self.tabs = QTabWidget()
        self.main_layout.addWidget(self.tabs)

        # Aggiungi una scheda di esempio
        self.add_new_tab("https://www.google.com", "Google")

        # Crea il mixer audio
        self.audio_mixer = self.create_audio_mixer()
        self.main_layout.addLayout(self.audio_mixer)

        # Imposta il layout della finestra principale
        central_widget = QWidget()
        central_widget.setLayout(self.main_layout)
        self.setCentralWidget(central_widget)

    def add_new_tab(self, url, label):
        # Crea una nuova scheda del browser
        browser = QWebEngineView()
        browser.setUrl(url)

        # Aggiungi la scheda al TabWidget
        self.tabs.addTab(browser, label)

    def create_audio_mixer(self):
        # Layout del mixer audio
        mixer_layout = QHBoxLayout()

        # Crea un fader per ogni scheda
        for i in range(self.tabs.count()):
            fader = self.create_fader(f"Tab {i+1}")
            mixer_layout.addWidget(fader)

        # Aggiungi il master fader
        master_fader = self.create_fader("Master")
        mixer_layout.addWidget(master_fader)

        return mixer_layout

    def create_fader(self, label_text):
        # Crea uno slider verticale per il volume
        slider = QSlider(Qt.Vertical)
        slider.setMinimum(0)
        slider.setMaximum(100)
        slider.setValue(50)  # Volume iniziale a 50%

        # Crea un'etichetta per il nome del fader
        label = QLabel(label_text)

        # Layout per lo slider e l'etichetta
        fader_layout = QVBoxLayout()
        fader_layout.addWidget(slider)
        fader_layout.addWidget(label)

        # Crea un widget per il fader completo
        fader_widget = QWidget()
        fader_widget.setLayout(fader_layout)

        return fader_widget

# Avvia l'applicazione
if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = BrowserWindow()
    window.show()
    sys.exit(app.exec_())
